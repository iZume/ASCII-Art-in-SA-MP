/* ASCII Art by Zume */

#define MAX_ASCII_ART_GEN   	15

enum renderEnum{
	renderExist,
	renderTextLen
};

new renderInfo[MAX_ASCII_ART_GEN][renderEnum];

new _ASCII_ART_ARRAY[][7*7] = {
	// [DEC]   [SYM] 32
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	// [DEC] ! [SYM] 33
	{0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
	// [DEC] " [SYM] 34
	{0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	// [DEC] # [SYM] 35
	{0,0,1,0,1,0,0,0,0,1,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0},
	// [DEC] $ [SYM] 36
	{0,0,1,1,1,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,1,1,1,1,0,0},
	// [DEC] % [SYM] 37
	{0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0},
	// [DEC] & [SYM] 38
	{0,0,1,1,1,0,0,0,0,1,0,1,0,0,0,1,1,0,1,1,0,0,1,1,1,1,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,1,1,1,0},
	// [DEC] ' [SYM] 39
	{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	// [DEC] ( [SYM] 40
	{0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0},
	// [DEC] ) [SYM] 41
	{0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0},
	// [DEC] * [SYM] 42
	{1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,0,0,1,1},
	// [DEC] + [SYM] 43
	{0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0},
	// [DEC] , [SYM] 44
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
	// [DEC] - [SYM] 45
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	// [DEC] . [SYM] 46
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
	// [DEC] / [SYM] 47
	{0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0},
	// [DEC] 0 [SYM] 48
	{0,0,1,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,0,1,1,1,0,0},
	// [DEC] 1 [SYM] 49
	{0,0,0,1,1,0,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,0},
	// [DEC] 2 [SYM] 50
	{0,1,1,1,1,1,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1},
	// [DEC] 3 [SYM] 51
	{0,1,1,1,1,1,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,0},
	// [DEC] 4 [SYM] 52
	{0,1,1,0,0,0,0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0},
	// [DEC] 5 [SYM] 53
	{1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,0},
	// [DEC] 6 [SYM] 54
	{0,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,0},
	// [DEC] 7 [SYM] 55
	{1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
	// [DEC] 8 [SYM] 56
	{0,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,0},
	// [DEC] 9 [SYM] 57
	{0,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,0},
	// [DEC] : [SYM] 58
	{0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0},
	// [DEC] ; [SYM] 59
	{0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0},
	// [DEC] < [SYM] 60
	{0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0},
	// [DEC] = [SYM] 61
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	// [DEC] > [SYM] 62
	{0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0},
	// [DEC] ? [SYM] 63
	{0,0,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
	// [DEC] @ [SYM] 64
	{0,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1,0},
	// [DEC] A [SYM] 65
	{0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1},
	// [DEC] B [SYM] 66
	{1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0},
	// [DEC] C [SYM] 67
	{0,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,1,1,1,0},
	// [DEC] D [SYM] 68
	{1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0},
	// [DEC] E [SYM] 69
	{1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1},
	// [DEC] F [SYM] 70
	{1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0},
	// [DEC] G [SYM] 71
	{0,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,1,1,0},
	// [DEC] H [SYM] 72
	{1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1},
	// [DEC] I [SYM] 73
	{0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0},
	// [DEC] J [SYM] 74
	{0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0},
	// [DEC] K [SYM] 75
	{1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0},
	// [DEC] L [SYM] 76
	{0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1},
	// [DEC] M [SYM] 77
	{1,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,1,0,1,0,1,1,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1},
	// [DEC] N [SYM] 78
	{1,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,1,0,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1},
	// [DEC] O [SYM] 79
	{1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1},
	// [DEC] P [SYM] 80
	{1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0},
	// [DEC] Q [SYM] 81
	{0,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,0,1,1,0,0,0,0,1,0,0,1,1,1,1,0,1},
	// [DEC] R [SYM] 82
	{1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1},
	// [DEC] S [SYM] 83
	{0,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,1,1,0},
	// [DEC] T [SYM] 84
	{1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0},
	// [DEC] U [SYM] 85
	{1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0,1,1,1,1,1,0},
	// [DEC] V [SYM] 86
	{1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0},
	// [DEC] W [SYM] 87
	{1,0,0,0,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0},
	// [DEC] X [SYM] 88
	{1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1},
	// [DEC] Y [SYM] 89
	{1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0},
	// [DEC] Z [SYM] 90
	{1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1},
	// [DEC] [ [SYM] 91
	{1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,0},
	// [DEC] \ [SYM] 92
	{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
	// [DEC] ] [SYM] 93
	{0,0,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1},
	// [DEC] ^ [SYM] 94
	{0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	// [DEC] _ [SYM] 95
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1},
	// [DEC] ` [SYM] 96
	{1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	// [DEC] a [SYM] 97
	{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0,1,1,1,1,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0},
	// [DEC] b [SYM] 98
	{0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0},
	// [DEC] c [SYM] 99
	{0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0},
	// [DEC] d [SYM] 100
	{0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,1,1,0,0,0},
	// [DEC] e [SYM] 101
	{0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0},
	// [DEC] f [SYM] 102
	{0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0},
	// [DEC] g [SYM] 103
	{0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,1,1,1,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0},
	// [DEC] h [SYM] 104
	{0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0},
	// [DEC] i [SYM] 105
	{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0},
	// [DEC] j [SYM] 106
	{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0},
	// [DEC] k [SYM] 107
	{0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0},
	// [DEC] l [SYM] 108
	{0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0},
	// [DEC] m [SYM] 109
	{0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,1,1,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0},
	// [DEC] n [SYM] 110
	{0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,1,1,0,1,0,0,0,0,1,0},
	// [DEC] o [SYM] 111
	{0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0},
	// [DEC] p [SYM] 112
	{0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0},
	// [DEC] q [SYM] 113
	{0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,1,0},
	// [DEC] r [SYM] 114
	{0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,1,1,1,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0},
	// [DEC] s [SYM] 115
	{0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0},
	// [DEC] t [SYM] 116
	{0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0},
	// [DEC] u [SYM] 117
	{0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0},
	// [DEC] v [SYM] 118
	{0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0},
	// [DEC] w [SYM] 119
	{0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,1,1,0,1,0,1,1,0,0,1,1,0,1,0,0,0,0,1,0},
	// [DEC] x [SYM] 120
	{0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0},
	// [DEC] y [SYM] 121
	{0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0},
	// [DEC] z [SYM] 122
	{0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0},
	// [DEC] { [SYM] 123
	{0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0},
	// [DEC] | [SYM] 124
	{0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0},
	// [DEC] } [SYM] 125
	{0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0},
	// [DEC] ~ [SYM] 126
	{0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

stock GetRenderLen(id)
	return renderInfo[id][renderTextLen];

stock RenderExist(id)
	return renderInfo[id][renderExist];

stock GetASCIIDec(str[])
{
	new
		s[4]
	;

	format(s, sizeof(s), "%c", str);

	format(s, sizeof(s), "%i", s);

	return strval(s);
}

stock DeleteASCIIArt(id)
{
	if(!((0 <= id < MAX_ASCII_ART_GEN) && renderInfo[id][renderExist]))
	    return 0;

	new
		_var_t[64]
	;

	new l = renderInfo[id][renderTextLen];
	for(new i; i < l; i++)
	{
		for(new x; x < 7*7; x++)
		{
			format(_var_t, sizeof(_var_t), "_%d_%d_%d_index", id, x, i);

			new
				value = getproperty(.name = _var_t);

			if((value != 0) && IsValidObject(value))
			{
			    DestroyObject(value);
			}
		}
	}
	renderInfo[id][renderExist] = false;
	return 1;
}

stock RenderASCIIArt(modelid, str[], Float:x, Float:y, Float:z, Float:angle, Float:width, Float:height, color = -1)
{
	new
		created_ = -1
	;

	for(new r = 0; r < MAX_ASCII_ART_GEN; r++)
	{
	    if(renderInfo[r][renderExist])
			continue;

		#define ____x 0
		#define ____y 1
		#define ____z 2

		z = z+(height*2)+15.0;

		new
			_temp[2],
			Float:pos[3],
			Float:_ls[2]
		;

		_ls[____x] = x;
		_ls[____y] = y;

		for(new _index; _index < strlen(str); _index++)
		{
			x = (_ls[____x] == x ? x : _ls[____x]+(width*3));
			y = (_ls[____y] == y ? y : _ls[____y]+(width*4));

			pos[____x] = x;
			pos[____y] = y;
			pos[____z] = z;

			format(_temp, sizeof(_temp), "%.2s", str[_index]);

			new
				l = GetASCIIDec(_temp)
			;

			if(strlen(_temp) > 0)
			{
				for(new i; i < 7*7; i++)
				{
				    if(!(0 <= l-32 <= sizeof _ASCII_ART_ARRAY))
					{
				        printf("ASCII-ART: The character '%c' [%i] not is valid in your include version.", l, l);
				        continue;
				    }

				    if(_ASCII_ART_ARRAY[l-32][i])
				    {
						new
							b_id = CreateObject(modelid, pos[____x], pos[____y], pos[____z], 0.0, 0.0, 0.0)
						;

						created_ = r;

						new
							_var_t[64]
						;

						format(_var_t, sizeof(_var_t), "_%d_%d_%d_index", r, i, _index);

						setproperty(.name = _var_t, .value = b_id);

						if(color != -1)
	        				SetObjectMaterial(b_id, 0, 16150, "ufo_bar", "GEwhite1_64", color);

					}
					pos[____x] += floatsin(-angle, degrees) + width/2;

					pos[____y] += floatcos(-angle, degrees) + width;

					_ls[____x] = pos[____x];
					_ls[____y] = pos[____y];

					if(((i+1) % 7) == 0)
					{
						pos[____x] = x;
						pos[____y] = y;

		   				pos[____z] -= height+(height/3);
					}
				}
			}
		}
		break;
	}

	if(created_ != -1)
	{
		renderInfo[created_][renderExist] = true;
		renderInfo[created_][renderTextLen] = strlen(str);

		return created_;
	}
	return -1;
}